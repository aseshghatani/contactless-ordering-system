<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<style>
   @import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600&display=swap');
    
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Cormorant Garamond', serif;
    }
    
    body {
        background-color: #000000;
        color: white;
    }
    
    .head {
        display: flex;
        height: 70px;
        background-color: #000000;
        align-items: center;
        justify-content: center;
        padding: 0 20px;
        border-bottom: 1px solid #333;
    }
    
    .menu {
        display: flex;
        color: white;
        gap: 20px;
        list-style: none;
        font-size: 18px;
    }
    
    a {
        text-decoration: none;
        color: white;
    }
    
    .profile-container {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
    }
    
    .profile-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }
    
    .user-info {
        display: flex;
        flex-direction: column;
    }
    
    .user-name {
        font-size: 35px;
        font-weight: bold;
        margin-bottom: 5px;
    }
    
    .user-email {
        font-size: 20px;
        color: #aaa;
    }
    
    .action-buttons {
        display: flex;
        gap: 10px;
    }
    
    .button {
        padding: 8px 15px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s;
    }
    
    .edit-btn {
        background-color: #FF9800;
        color: black;
    }
    
    .logout-btn {
        background-color: #FF9800;
        color: black;
    }
    
    .button:hover {
        opacity: 0.9;
    }
    
    .section-title {
        font-size: 24px;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #333;
    }
    
    .orders-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }
    
    .order-item {
        background-color: #111;
        border-radius: 8px;
        padding: 15px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .order-details {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }
    
    .order-id {
        font-size: 18px;
        font-weight: bold;
    }
    
    .order-date {
        font-size: 20px;
        color: #aaa;
    }
    
    .order-table {
        color: #aaa;
    }
    
    .view-order-btn {
        background-color: #FF9800;
        color: black;
        padding: 8px 15px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s;
    }
    
    .view-order-btn:hover {
        opacity: 0.9;
    }
    
    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        overflow: auto;
    }
    
    .modal-content {
        background-color: #111;
        margin: 10% auto;
        padding: 20px;
        border-radius: 8px;
        max-width: 600px;
        animation: modalFadeIn 0.3s;
    }
    
    @keyframes modalFadeIn {
        from {opacity: 0; transform: translateY(-20px);}
        to {opacity: 1; transform: translateY(0);}
    }
    
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #333;
    }
    
    .modal-title {
        font-size: 24px;
        font-weight: bold;
    }
    
    .close-modal {
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        color: #aaa;
    }
    
    .close-modal:hover {
        color: white;
    }
    
    .order-items-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .order-item-row {
        display: flex;
        justify-content: space-between;
        padding: 10px;
        background-color: #1a1a1a;
        border-radius: 5px;
    }
    
    .item-name {
        font-size: 18px;
    }
    
    .item-quantity {
        font-size: 18px;
        color: #FF9800;
    }
    
    .item-price {
        font-size: 18px;
    }
    
    .order-total {
        margin-top: 20px;
        padding-top: 15px;
        border-top: 1px solid #333;
        text-align: right;
        font-size: 20px;
        font-weight: bold;
    }
    
    .error-message {
        color: #ff5252;
        text-align: center;
        padding: 15px;
    }
</style>
<body>
    <header>
        <nav class="head">
            <ul class="menu">
                <li><a href="/user_dashboard">Home</a></li>
                <li><a href="/menu">Menu</a></li>
            </ul>
        </nav>
    </header>
    
    <div class="profile-container">
        <div class="profile-header">
            <div class="user-info">
                <div class="user-name">{{user.name}}</div>
                <div class="user-email">{{user.email}}</div>
            </div>
            <div class="action-buttons">
                <button class="button edit-btn" onclick="if (confirm('Are you sure you want to edit profile?')) { window.location.href='/editProfile'; }">edit</button>
                <button class="button logout-btn" onclick="if (confirm('Are you sure you want to logout?')) { window.location.href='/logout'; }">log out</button>
            </div>
        </div>
        
        <div class="orders-section">
            <h2 class="section-title">Orders</h2>
            <div class="orders-list">
                {{#if orders.length}}
                    {{#each orders}}
                        <div class="order-item">
                            <div class="order-details">
                                <div class="order-id">#{{this.firstItemName}}</div>
                                <div class="order-date">{{this.formattedDate}} {{this.formattedTime}}</div>
                                <div class="order-table">Table: {{this.tableNumber}}</div>
                            </div>
                            <button class="view-order-btn" onclick="showOrderDetails('{{this._id}}')">view order</button>
                        </div>
                    {{/each}}
                {{else}}
                    <p>No orders found.</p>
                {{/if}}
            </div>
        </div>
    </div>
    
    <!-- Order Details Modal -->
     <div id="orderDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Order Details</div>
                <span class="close-modal" onclick="closeModal()">&times;</span>
            </div>
            <div id="orderItemsContainer" class="order-items-list">
                <!-- Order items will be loaded here -->
            </div>
            <div id="orderTotal" class="order-total">
                Total: $0.00
            </div>
        </div>
    </div>
    
    <script>
        // Modal functionality
        const modal = document.getElementById('orderDetailsModal');
        
        function showOrderDetails(orderId) {
            // Fetch order details from server
            fetchOrderDetails(orderId);
            
            // Show modal
            modal.style.display = 'block';
            
            // Close modal if user clicks outside of it
            window.onclick = function(event) {
                if (event.target === modal) {
                    closeModal();
                }
            }
        }
        
        function closeModal() {
            modal.style.display = 'none';
        }
        
        function fetchOrderDetails(orderId) {
            // Make an AJAX request to get order details from the server
            fetch(`/api/orders/${orderId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch order details');
                    }
                    return response.json();
                })
                .then(data => {
                    displayOrderItems(data);
                })
                .catch(error => {
                    console.error('Error fetching order details:', error);
                    document.getElementById('orderItemsContainer').innerHTML = 
                        '<div class="error-message">Failed to load order details. Please try again.</div>';
                });
        }
        
        function displayOrderItems(orderData) {
            const itemsContainer = document.getElementById('orderItemsContainer');
            const totalElement = document.getElementById('orderTotal');
            
            // Clear previous content
            itemsContainer.innerHTML = '';
            
            // Calculate total price
            let totalPrice = 0;
            
            // Add each item to the modal
            orderData.items.forEach(item => {
                const itemPrice = item.product.price * item.quantity;
                totalPrice += itemPrice;
                
                const itemElement = document.createElement('div');
                itemElement.className = 'order-item-row';
                itemElement.innerHTML = `
                    <div class="item-name">${item.product.name}</div>
                    <div class="item-quantity">x${item.quantity}</div>
                    <div class="item-price">$${itemPrice.toFixed(2)}</div>
                `;
                
                itemsContainer.appendChild(itemElement);
            });
            
            // Update total
            totalElement.textContent = `Total: $${totalPrice.toFixed(2)}`;
        }
    </script>
</body>
</html>